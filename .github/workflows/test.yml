name: Test

on:
  schedule:
    - cron: "0 7 * * 0"
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: read

jobs:

  check:
    strategy:
      matrix:
        runner:
          - ubuntu-latest
        deno:
          - version: 1.x
            # Remove lock file for Deno 1.x
            remove-lock: true
          - version: 2.x
    runs-on: ${{ matrix.runner }}
    steps:

      - uses: actions/checkout@v4

      - name: Remove deno.lock
        if: matrix.deno.remove-lock == true
        run: rm -f deno.lock

      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno.version }}

      - uses: actions/cache@v4
        with:
          key: deno-${{ runner.os }}-${{ hashFiles('deno.lock', '.github/workflows/**') }}
          restore-keys: deno-${{ runner.os }}-
          path: ~/.cache/deno

      - name: Check
        run: deno task check

  check-publish:
    needs: check
    strategy:
      matrix:
        runner:
          - ubuntu-latest
        deno:
          - version: 2.x
    runs-on: ${{ matrix.runner }}
    steps:

      - uses: actions/checkout@v4

      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno.version }}

      - uses: actions/cache@v4
        with:
          key: deno-${{ runner.os }}-${{ hashFiles('deno.lock', '.github/workflows/**') }}
          restore-keys: deno-${{ runner.os }}-
          path: ~/.cache/deno

      - name: Check slow types
        run: deno task check:publish

  test-deno:
    needs: check
    strategy:
      matrix:
        runner:
          - ubuntu-latest
        deno:
          - version: 1.x
            # Remove lock file for Deno 1.x
            remove-lock: true
          - version: 2.x
    runs-on: ${{ matrix.runner }}
    steps:

      - uses: actions/checkout@v4

      - name: Remove deno.lock
        if: matrix.deno.remove-lock == true
        run: rm -f deno.lock

      - uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ matrix.deno.version }}

      - uses: actions/cache@v4
        with:
          key: deno-${{ runner.os }}-${{ hashFiles('deno.lock', '.github/workflows/**') }}
          restore-keys: deno-${{ runner.os }}-
          path: ~/.cache/deno

      - name: Test
        run: deno task test:coverage

      - name: Coverage
        run: deno task coverage --lcov --output=./lcov

      - uses: codecov/codecov-action@v4
        with:
          files: ./lcov
          token: ${{ secrets.CODECOV_TOKEN }}

  test-node:
    needs: check
    strategy:
      matrix:
        runner:
          - ubuntu-latest
        node-version:
          - 20
          - 22
          - 24
          - "lts/*"
    runs-on: ${{ matrix.runner }}
    steps:

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Setup
        run: npm ci

      - name: Test
        run: npm run test

  test-browser:
    needs: check
    strategy:
      matrix:
        runner:
          - ubuntu-latest
        node-version:
          - "lts/*"
        browser:
          - chromium
          - firefox
          - webkit
    timeout-minutes: 20
    runs-on: ${{ matrix.runner }}
    steps:

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Setup
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run test:browser:${{ matrix.browser }}
